package kr.or.ddit.login.controller;

import java.io.IOException;

import javax.inject.Inject;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.common.enumpkg.ServiceResult;
import kr.or.ddit.login.service.AuthenticateService;
import kr.or.ddit.vo.groupware.EmployeeVO;
import lombok.extern.slf4j.Slf4j;

/**
 * @author 박민주
 * @since 2023. 11. 7.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * 
 *      <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 * --------     --------    ----------------------
 * 2023. 11. 7.      박민주       최초작성
 * Copyright (c) 2023 by DDIT All right reserved
 *      </pre>
 */

@Controller
@RequestMapping("/login")
@Slf4j
public class LoginController {

	@Inject
	private AuthenticateService service;

	@GetMapping
	public String doGet() {
		return "login/loginForm";
	}

	@PostMapping("loginProcess")
	public String doPost(@Validated @RequestParam("empCd") String empCd, @Validated @RequestParam("empPw") String empPw,
			HttpSession session) {

		EmployeeVO inputData = new EmployeeVO();
		inputData.setEmpCd(empCd);
		inputData.setEmpPw(empPw);

		String viewName = null;
		ServiceResult result = service.authenticate(inputData);
		switch (result) {
		case OK:
			viewName = "redirect:/"; // 웰컴페이지로 이동
//			viewName = "redirect:/login";
			session.setAttribute("authEmployee", inputData);
			log.info("session 정보 : {}", session.getAttribute("authEmployee"));
			break;
		case INVALIDPASSWORD:
			viewName = "redirect:/login";
			session.setAttribute("message", "비밀번호가 틀렸습니다.");
			break;
		default:
			viewName = "redirect:/login";
			session.setAttribute("message", "해당하는 직원정보가 존재하지 않습니다.");
			break;
		}
		return viewName;
	}

	@PostMapping("logout")
	public String doPostLogout(HttpSession session, HttpServletResponse resp) throws IOException {

		if (session == null || session.isNew()) {
			// 로그인 하지도 않았는데, 로그아웃 요청 들어왔으므로 400에러(Bad request=잘못된요청) 내보내기
			resp.sendError(400, "잘못된 요청입니다.");
			return null;
		}
		session.invalidate(); // 저장된 데이터 있으면 전부 삭제
		// 세션 만료 후 웰컴페이지로 이동힘.
		return "redirect:/";
	}
	
	@PostMapping("findPw")
	public void findPw(
			
			) {
		//이 버튼 클릭시 modal 창 뜸
		//모달창에서, 사번, 이름, 휴대폰 번호 입력받아서
		//정보일치할 시에, 인증번호를 발송함
		//올바른 인증번호 입력 시, 비밀번호를 생년월일로 초기화 => 비밀번호를 생년월일(ex.19970125)로 초기화하였습니다. 변경된 비밀번호로 로그인해주세요.
		//이 비밀번호로 로그인 시, 비밀번호 변경창으로 이동하도록 (사원의 비밀번호와 생년월일이 일치할때에는 항상 비밀번호 변경창으로 이동)
	}
}
