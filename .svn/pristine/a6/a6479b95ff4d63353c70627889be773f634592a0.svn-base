<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<%--
* [[개정이력(Modification Information)]]
* 수정일                 수정자      수정내용
* ----------  ---------  -----------------
* 2023. 11. 10    송석원      최초작성 
* Copyright (c) ${year} by DDIT All right reserved
 --%>
 

<div class="container">
	<div class="dropzone" data-pro-sttus="1" data-add-bg="bg-primary">
		<div class="kanban-header">진행</div>
		<c:if test="${not empty proj}">
			<c:forEach items="${proj}" var="proj" varStatus="vs">
				<c:if test="${proj.proSttus == 1}">
					<div id="project1_${vs.count}" class="draggable  col-md-6   card bg-primary text-white mb-3"
						draggable="true" data-pro-sn="${proj.proSn }">
						<div class="card-header">프로젝트</div>
						<div class="card-body">
							<h3 class="card-title text-white">
    								<a href="<c:url value='/job/home/${pjob.proSn}'/>" style="color: white;" draggable="false">${proj.proNm}</a>
							</h3>

							<p class="card-text">생성일:${proj.proBdate}</p>
						</div>
					</div>
				</c:if>
			</c:forEach>
		</c:if>
	</div>


	<div class="dropzone  borderline" data-pro-sttus="2" data-add-bg="bg-warning">
		<div class="kanban-header">보류</div>

		<c:if test="${not empty proj}">
			<c:forEach items="${proj}" var="proj" varStatus="vs">
				<c:if test="${proj.proSttus == 2}">
					<div id="project2_${vs.count}" class="draggable  col-md-6   card bg-warning text-white mb-3"
						draggable="true" data-pro-sn="${proj.proSn }">
						<div class="card-header">프로젝트</div>
						<div class="card-body">
							<h3 class="card-title text-white">
    								<a href="<c:url value='/job/home/${pjob.proSn}'/>" style="color: white;" draggable="false">${proj.proNm}</a>
							</h3>
							<p class="card-text">생성일:${proj.proBdate}</p>
						</div>
					</div>
				</c:if>
			</c:forEach>
		</c:if>
	</div>
 
	<div class="dropzone  borderline" data-pro-sttus="3" data-add-bg="bg-success">
		<div class="kanban-header">완료</div> 

		<c:if test="${not empty proj}">
			<c:forEach items="${proj}" var="proj" varStatus="vs">
				<c:if test="${proj.proSttus == 3}">
					<div id="project3_${vs.count}" class="draggable  col-md-6   card bg-success text-white mb-3"
						draggable="true" data-pro-sn="${proj.proSn }">
						<div class="card-header">프로젝트</div> 
						<div class="card-body">
							<h3 class="card-title text-white">
    								<a href="<c:url value='/job/home/${pjob.proSn}'/>"style="color: white;" draggable="false">${proj.proNm}</a>
							</h3>
							<p class="card-text">생성일:${proj.proBdate}</p>
						</div>
					</div>
				</c:if>
			</c:forEach>
		</c:if>
	</div>


</div>




<script>
let dragged;

/* 드래그 가능한 대상에서 발생하는 이벤트 */
document.addEventListener("drag", (event) => {
  console.log("dragging");
});

document.addEventListener("dragstart", (event) => {
  // 드래그한 요소에 대한 참조 저장
  dragged = event.target;
  // 반투명하게 만들기
  event.target.classList.add("dragging");
  
  const proSn = event.target.dataset.proSn;//추가
  event.dataTransfer.setData("proSnkey",proSn);
  //porSnkey에 proSn의 정보를 저장한다.=>보드에서 보드로 이동하면서 값이 바뀌기때문에 
  //dataTransfer을 이용해 데이터를 저장한거임!
  const proSttus = event.target.getAttribute("data-proSttus");//추가
  event.dataTransfer.setData("proSttuskey",proSttus);//이하동문
});

document.addEventListener("dragend", (event) => {
  // 투명도 초기화
  event.target.classList.remove("dragging");
});

/* 드롭 대상에서 발생하는 이벤트 */
document.addEventListener(
  "dragover",
  (event) => {
    // 드롭을 허용하기 위해 기본 동작 취소
    event.preventDefault();
  },
  false,
);

document.addEventListener("dragenter", (event) => {
  // 드래그 가능한 요소가 대상 위로 오면 강조
  if (event.target.classList.contains("dropzone")) {
    event.target.classList.add("dragover");
  }
});

document.addEventListener("dragleave", (event) => {
  // 드래그 가능한 요소가 대상 밖으로 나가면 강조 제거
  if (event.target.classList.contains("dropzone")) {
    event.target.classList.remove("dragover");
  }
});

let dropElements = document.querySelectorAll(".dropzone");
let bgArray=['bg-success', 'bg-warning', 'bg-primary']

dropElements.forEach(el=>{
 	el.addEventListener("drop",event=>{
 		console.log("ffffffffffffff");
 		 // 일부 요소의 링크 열기와 같은 기본 동작 취소
 		  event.preventDefault();
 		  // 드래그한 요소를 선택한 드롭 대상으로 이동
 		  if (event.target.classList.contains("dropzone")) {
 		    event.target.classList.remove("dragover");
 		    
 		    const proSn = event.dataTransfer.getData("proSnkey")
 		    const proSttus = event.target.dataset.proSttus//추가 
 		    
 		    
 		    $.ajax({
 		    	   type:"PUT",
 		    	   url:"/pms/project",
 		    	   contentType:"application/json",
 		    	   dataType:"json",
 		    	  data: JSON.stringify({proSn:proSn, proSttus:proSttus}), //추가
 		    	   success:function(data){
 		    	      console.log("성공") 
 		    	         dragged.parentNode.removeChild(dragged);
 		    			 event.target.appendChild(dragged);
 		    			 
 		    			bgArray.forEach(b=>{
 		    				dragged.classList.remove(b);
 		    			});
 		    			 
 		    			 dragged.classList.add(event.target.dataset.addBg);
//  		    	      alert("1")
 		    	   },error:function(xhr){ 
 		    	      console.log("실패")
 		    	      alert("2")
 		    	   }
 		    	})   
 		    
 		 
 		  }
 	});
});

</script>




<style>
body {
	/* 사용자가 예제의 텍스트를 선택하지 못하도록 */
	user-select: none;
}

.container {
	display: flex;
	justify-content: center;
	height: 100vh;
}

.draggable {
	background: white;
	/*   border: 1px solid black; */
	width: 250px;
	height: 155px;
	margin-top: 30px;
}

.dropzone {
	width: 500px;
	background: blueviolet;
	padding: 10px;
	display: inline-block;
	background-color: rgba(255, 0, 0, 0);
}

.dropzone.dragover {
	/*   background-color: purple; */
	background-color: rgba(0, 0, 200, 0.1);
}

.dragging {
	opacity: 0.5;
}

.kanban-header {
	color: black;
	font-size: 18pt;
}

.borderline {
	border-left: 1px solid #000; /* 1px 두께의 선, 색상은 #000 (검은색) */
	margin: 0 10px; /* 왼쪽과 오른쪽에 간격을 줍니다. */
	padding: 10px; /* 구분선과 내용 사이에 간격을 줍니다. */
}
</style>
