package kr.or.ddit.groupware.webhard.ftp;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.SocketException;

import org.apache.commons.net.ftp.FTP;
import org.apache.commons.net.ftp.FTPClient;

public class FTPControl {
	
	//선택된 디렉토리(폴더)에 존재하는 파일이름을 모두 불러옵니다.
	public static void ftpReadFiles(String uri, String id, String pw,String directoryLocation){
    	FTPClient ftp = null;
		try {
			ftp = new FTPClient();
			ftp.setControlEncoding("UTF-8");
			ftp.connect(uri);
			ftp.login(id, pw);
			ftp.changeWorkingDirectory(directoryLocation);//파일 가져올 디렉터리 위치
			ftp.setFileType(FTP.BINARY_FILE_TYPE);//파일 타입 설정 기본적으로 파일을 전송할떄는 BINARY타입을 사용합니다.

			for(String fileName :ftp.listNames()){
				System.out.println(fileName);
			}
			
			ftp.logout();
		} catch (SocketException e) {
			System.out.println("Socket:" + e.getMessage());
		} catch (IOException e) {
			System.out.println("IO:" + e.getMessage());
		} finally {
			if (ftp != null && ftp.isConnected()) {
				try {
					ftp.disconnect();//ftp연결 끊기
				} catch (IOException e) {
				}
			}
		}
    }
	
	// 파일 다운
	public static void ftpDownload(String uri, String id, String pw, String localFile, String ftpFile, String directoryLocation){
    	FTPClient ftp = null;
		try {
			ftp = new FTPClient();
			ftp.setControlEncoding("UTF-8"); 
			ftp.connect(uri); //"192.168.0.35"
			ftp.login(id, pw); //"MeongDdi", "1234"
			ftp.changeWorkingDirectory(directoryLocation);//파일 가져올 디렉터리 위치
			ftp.setFileType(FTP.BINARY_FILE_TYPE);//파일 타입 설정 기본적으로 파일을 전송할떄는 BINARY타입을 사용합니다.

			File f = new File("./", localFile);//로컬에 다운받아 설정할 이름
			FileOutputStream fos = null;
			try {
				fos = new FileOutputStream(f);
				boolean isSuccess = ftp.retrieveFile(ftpFile, fos);//ftp서버에 존재하는 해당명의 파일을 다운로드 하여 fos에 데이터를 넣습니다.
				if (isSuccess) {
					System.out.println("다운로드를 성공 하였습니다.");
				} else {
					System.out.println("다운로드 실패하여습니다.");
				}
			} catch (IOException ex) {
				System.out.println(ex.getMessage());
			} finally {
				if (fos != null)
					try {
						fos.close();
					} catch (IOException ex) {
					}
			}
			ftp.logout();
		} catch (SocketException e) {
			System.out.println("Socket:" + e.getMessage());
		} catch (IOException e) {
			System.out.println("IO:" + e.getMessage());
		} finally {
			if (ftp != null && ftp.isConnected()) {
				try {
					ftp.disconnect();//ftp연결 끊기
				} catch (IOException e) {
				}
			}
		}
    }
}
